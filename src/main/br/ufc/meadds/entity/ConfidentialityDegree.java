package br.ufc.meadds.entity;

// Generated 01/06/2011 09:36:02 by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

// TODO: Auto-generated Javadoc
/**
 * Confidentialitydegree generated by hbm2java.
 */
@Entity
@Table(name = "confidentiality_degree", uniqueConstraints = @UniqueConstraint(columnNames = "name"))
public class ConfidentialityDegree implements Serializable {

	/** The Constant serialVersionUID. */
	private static final long serialVersionUID = -2106326518575586598L;

	/** The id. */
	private Long id;

	/** The name. */
	private String name;

	/** The minimum value. */
	private Double minimumValue;

	/** The maximum value. */
	private Double maximumValue;

	/** The applications. */
	private Set<Application> applications = new HashSet<Application>(0);

	/**
	 * Instantiates a new confidentiality degree.
	 */
	public ConfidentialityDegree() {
	}

	/**
	 * Instantiates a new confidentiality degree.
	 * 
	 * @param name the name
	 * @param minimumValue the minimum value
	 * @param maximumValue the maximum value
	 */
	public ConfidentialityDegree(String name, Double minimumValue, Double maximumValue) {
		this.name = name;
		this.minimumValue = minimumValue;
		this.maximumValue = maximumValue;
	}

	/**
	 * Instantiates a new confidentiality degree.
	 * 
	 * @param name the name
	 * @param minimumValue the minimum value
	 * @param maximumValue the maximum value
	 * @param applications the applications
	 */
	public ConfidentialityDegree(String name, Double minimumValue, Double maximumValue, Set<Application> applications) {
		this.name = name;
		this.minimumValue = minimumValue;
		this.maximumValue = maximumValue;
		this.applications = applications;
	}

	/**
	 * Gets the id.
	 * 
	 * @return the id
	 */
	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	/**
	 * Sets the id.
	 * 
	 * @param id the new id
	 */
	public void setId(Long id) {
		this.id = id;
	}

	/**
	 * Gets the name.
	 * 
	 * @return the name
	 */
	@Column(name = "name", unique = true, nullable = false, length = 45)
	@NotNull
	@Length(max = 45)
	public String getName() {
		return this.name;
	}

	/**
	 * Sets the name.
	 * 
	 * @param name the new name
	 */
	public void setName(String name) {
		this.name = name;
	}

	/**
	 * Gets the minimum value.
	 * 
	 * @return the minimum value
	 */
	@Column(name = "minimumValue", nullable = false, precision = 10, scale = 0)
	public Double getMinimumValue() {
		return this.minimumValue;
	}

	/**
	 * Sets the minimum value.
	 * 
	 * @param minimumValue the new minimum value
	 */
	public void setMinimumValue(Double minimumValue) {
		this.minimumValue = minimumValue;
	}

	/**
	 * Gets the maximum value.
	 * 
	 * @return the maximum value
	 */
	@Column(name = "maximumValue", nullable = false, precision = 10, scale = 0)
	public Double getMaximumValue() {
		return this.maximumValue;
	}

	/**
	 * Sets the maximum value.
	 * 
	 * @param maximumValue the new maximum value
	 */
	public void setMaximumValue(Double maximumValue) {
		this.maximumValue = maximumValue;
	}

	/**
	 * Gets the applications.
	 * 
	 * @return the applications
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "confidentialityDegree")
	public Set<Application> getApplications() {
		return this.applications;
	}

	/**
	 * Sets the applications.
	 * 
	 * @param applications the new applications
	 */
	public void setApplications(Set<Application> applications) {
		this.applications = applications;
	}

}
