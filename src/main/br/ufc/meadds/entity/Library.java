package br.ufc.meadds.entity;

// Generated 01/06/2011 09:36:02 by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.persistence.Version;

import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

// TODO: Auto-generated Javadoc
/**
 * Library generated by hbm2java.
 */
@Entity
@Table(name = "library", uniqueConstraints = @UniqueConstraint(columnNames = {
		"name", "version" }))
public class Library implements Serializable {

	/** The Constant serialVersionUID. */
	private static final long serialVersionUID = 651141726210900571L;

	/** The id. */
	private Long id;

	/** The version. */
	private Integer version;

	/** The name. */
	private String name;

	/** The language. */
	private String language;

	/** The plataform. */
	private String plataform;

	/** The applications. */
	private Set<Application> applications = new HashSet<Application>(0);

	/** The sampleprofiles. */
	private Set<SampleProfile> sampleprofiles = new HashSet<SampleProfile>(0);

	/** The algorithms. */
	private Set<Algorithm> algorithms = new HashSet<Algorithm>(0);

	/** The owners. */
	private Set<User> users = new HashSet<User>();

	/**
	 * Instantiates a new library.
	 */
	public Library() {
	}

	/**
	 * Instantiates a new library.
	 * 
	 * @param name
	 *            the name
	 * @param language
	 *            the language
	 */
	public Library(String name, String language) {
		this.name = name;
		this.language = language;
	}

	/**
	 * Instantiates a new library.
	 * 
	 * @param name
	 *            the name
	 * @param language
	 *            the language
	 * @param plataform
	 *            the plataform
	 * @param applications
	 *            the applications
	 * @param sampleprofiles
	 *            the sampleprofiles
	 * @param algorithms
	 *            the algorithms
	 */
	public Library(String name, String language, String plataform,
			Set<Application> applications, Set<SampleProfile> sampleprofiles,
			Set<Algorithm> algorithms) {
		this.name = name;
		this.language = language;
		this.plataform = plataform;
		this.applications = applications;
		this.sampleprofiles = sampleprofiles;
		this.algorithms = algorithms;
	}

	/**
	 * Gets the id.
	 * 
	 * @return the id
	 */
	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	/**
	 * Sets the id.
	 * 
	 * @param id
	 *            the new id
	 */
	public void setId(Long id) {
		this.id = id;
	}

	/**
	 * Gets the version.
	 * 
	 * @return the version
	 */
	@Version
	@Column(name = "version", unique = true, nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	/**
	 * Sets the version.
	 * 
	 * @param version
	 *            the new version
	 */
	public void setVersion(Integer version) {
		this.version = version;
	}

	/**
	 * Gets the name.
	 * 
	 * @return the name
	 */
	@Column(name = "name", unique = true, nullable = false, length = 45)
	@NotNull
	@Length(max = 45)
	public String getName() {
		return this.name;
	}

	/**
	 * Sets the name.
	 * 
	 * @param name
	 *            the new name
	 */
	public void setName(String name) {
		this.name = name;
	}

	/**
	 * Gets the language.
	 * 
	 * @return the language
	 */
	@Column(name = "language", nullable = false, length = 45)
	@NotNull
	@Length(max = 45)
	public String getLanguage() {
		return this.language;
	}

	/**
	 * Sets the language.
	 * 
	 * @param language
	 *            the new language
	 */
	public void setLanguage(String language) {
		this.language = language;
	}

	/**
	 * Gets the plataform.
	 * 
	 * @return the plataform
	 */
	@Column(name = "plataform", length = 45)
	@Length(max = 45)
	public String getPlataform() {
		return this.plataform;
	}

	/**
	 * Sets the plataform.
	 * 
	 * @param plataform
	 *            the new plataform
	 */
	public void setPlataform(String plataform) {
		this.plataform = plataform;
	}

	/**
	 * Gets the applications.
	 * 
	 * @return the applications
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "library")
	public Set<Application> getApplications() {
		return this.applications;
	}

	/**
	 * Sets the applications.
	 * 
	 * @param applications
	 *            the new applications
	 */
	public void setApplications(Set<Application> applications) {
		this.applications = applications;
	}

	/**
	 * Gets the sampleprofiles.
	 * 
	 * @return the sampleprofiles
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "library")
	public Set<SampleProfile> getSampleprofiles() {
		return this.sampleprofiles;
	}

	/**
	 * Sets the sampleprofiles.
	 * 
	 * @param sampleprofiles
	 *            the new sampleprofiles
	 */
	public void setSampleprofiles(Set<SampleProfile> sampleprofiles) {
		this.sampleprofiles = sampleprofiles;
	}

	/**
	 * Gets the algorithms.
	 * 
	 * @return the algorithms
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "library")
	public Set<Algorithm> getAlgorithms() {
		return this.algorithms;
	}

	/**
	 * Sets the algorithms.
	 * 
	 * @param algorithms
	 *            the new algorithms
	 */
	public void setAlgorithms(Set<Algorithm> algorithms) {
		this.algorithms = algorithms;
	}

	/**
	 * @return the users
	 */
	@ManyToMany
	@JoinTable(name = "user_library", joinColumns = @JoinColumn(name = "library_id"), inverseJoinColumns = @JoinColumn(name = "user_id"))
	public Set<User> getUsers() {
		return users;
	}

	/**
	 * @param users
	 *            the users to set
	 */
	public void setUsers(Set<User> users) {
		this.users = users;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see java.lang.Object#hashCode()
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		result = prime * result
				+ ((language == null) ? 0 : language.hashCode());
		result = prime * result + ((name == null) ? 0 : name.hashCode());
		result = prime * result
				+ ((plataform == null) ? 0 : plataform.hashCode());
		result = prime * result + ((version == null) ? 0 : version.hashCode());
		return result;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Library other = (Library) obj;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		if (language == null) {
			if (other.language != null)
				return false;
		} else if (!language.equals(other.language))
			return false;
		if (name == null) {
			if (other.name != null)
				return false;
		} else if (!name.equals(other.name))
			return false;
		if (plataform == null) {
			if (other.plataform != null)
				return false;
		} else if (!plataform.equals(other.plataform))
			return false;
		if (version == null) {
			if (other.version != null)
				return false;
		} else if (!version.equals(other.version))
			return false;
		return true;
	}

}
