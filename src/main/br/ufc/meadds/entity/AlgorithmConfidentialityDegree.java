package br.ufc.meadds.entity;

// Generated 01/06/2011 09:36:02 by Hibernate Tools 3.4.0.CR1

import java.io.Serializable;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import org.hibernate.validator.NotNull;
import org.hibernate.validator.Range;

// TODO: Auto-generated Javadoc
/**
 * Algorithmconfidentialitydegree generated by hbm2java.
 */
@Entity
@Table(name = "algorithm_confidentiality_degree", uniqueConstraints = @UniqueConstraint(columnNames = {
		"user_id", "algorithm_id" }))
public class AlgorithmConfidentialityDegree implements Serializable {

	/** The Constant serialVersionUID. */
	private static final long serialVersionUID = 2044092276572082230L;

	/** The id. */
	private Long id;

	/** The algorithm. */
	private Algorithm algorithm;

	/** The user. */
	private User user;

	/** The kmin. */
	private Integer kmin = Integer.valueOf(0);

	/** The ktam. */
	private Integer ktam = Integer.valueOf(0);

	/** The p. */
	private Double p = Double.valueOf(0);

	/**
	 * Instantiates a new algorithm confidentiality degree.
	 */
	public AlgorithmConfidentialityDegree() {
	}

	/**
	 * Instantiates a new algorithm confidentiality degree.
	 * 
	 * @param id
	 *            the id
	 * @param algorithm
	 *            the algorithm
	 * @param user
	 *            the user
	 * @param kmin
	 *            the kmin
	 * @param ktam
	 *            the ktam
	 * @param p
	 *            the p
	 */
	public AlgorithmConfidentialityDegree(Long id, Algorithm algorithm,
			User user, Integer kmin, Integer ktam, Double p) {
		this.id = id;
		this.algorithm = algorithm;
		this.user = user;
		this.kmin = kmin;
		this.ktam = ktam;
		this.p = p;
	}

	/**
	 * Gets the id.
	 * 
	 * @return the id
	 */
	@Id
	@Column(name = "id", unique = true, nullable = false)
	@GeneratedValue(strategy = GenerationType.AUTO)
	public Long getId() {
		return this.id;
	}

	/**
	 * Sets the id.
	 * 
	 * @param id
	 *            the new id
	 */
	public void setId(Long id) {
		this.id = id;
	}

	/**
	 * Gets the algorithm.
	 * 
	 * @return the algorithm
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "algorithm_id", nullable = false)
	public Algorithm getAlgorithm() {
		return this.algorithm;
	}

	/**
	 * Sets the algorithm.
	 * 
	 * @param algorithm
	 *            the new algorithm
	 */
	public void setAlgorithm(Algorithm algorithm) {
		this.algorithm = algorithm;
	}

	/**
	 * Gets the user.
	 * 
	 * @return the user
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_id", nullable = false)
	@NotNull
	public User getUser() {
		return this.user;
	}

	/**
	 * Sets the user.
	 * 
	 * @param user
	 *            the new user
	 */
	public void setUser(User user) {
		this.user = user;
	}

	/**
	 * Gets the kmin.
	 * 
	 * @return the kmin
	 */
	@Column(name = "kmin", nullable = false)
	public Integer getKmin() {
		return this.kmin;
	}

	/**
	 * Sets the kmin.
	 * 
	 * @param kmin
	 *            the new kmin
	 */
	public void setKmin(Integer kmin) {
		this.kmin = kmin;
	}

	/**
	 * Gets the ktam.
	 * 
	 * @return the ktam
	 */
	@Column(name = "ktam", nullable = false)
	public Integer getKtam() {
		return this.ktam;
	}

	/**
	 * Sets the ktam.
	 * 
	 * @param ktam
	 *            the new ktam
	 */
	public void setKtam(Integer ktam) {
		this.ktam = ktam;
	}

	/**
	 * Gets the p.
	 * 
	 * @return the p
	 */
	@Column(name = "p", nullable = false, precision = 10, scale = 0)
	@Range(min = 0, max = 1, message = "Valor deve estar entre {min} e {max}")
	public Double getP() {
		return this.p;
	}

	/**
	 * Sets the p.
	 * 
	 * @param p
	 *            the new p
	 */
	public void setP(Double p) {
		this.p = p;
	}

}
