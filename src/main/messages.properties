down=v
up=^

# ==============================================================================
# Component Errors
# ==============================================================================

javax.faces.component.UIInput.CONVERSION=Erro durante a conversão.
javax.faces.component.UIInput.REQUIRED=Campo obrigatório.
javax.faces.component.UIInput.UPDATE=Ocorreu um erro no envio das informações. 
javax.faces.component.UISelectOne.INVALID=Valor inválido.
javax.faces.component.UISelectMany.INVALID=Valor inválido

# ==============================================================================
# Converter Errors
# ==============================================================================
javax.faces.converter.BigDecimalConverter.DECIMAL=''{0}'' deve ser um numero decimal.
javax.faces.converter.BigDecimalConverter.DECIMAL_detail=''{0}'' deve ser um número decimal de um ou mais dígitos, seguido de pontuação decimal ou fração.  Exemplo\: {1} 
javax.faces.converter.BigIntegerConverter.BIGINTEGER=''{0}'' deve ser um número de um ou mais dígitos.
javax.faces.converter.BigIntegerConverter.BIGINTEGER_detail= ''{0}'' deve ser um número de um ou mais dígitos. Exemplo\: {1} 
javax.faces.converter.BooleanConverter.BOOLEAN=''{0}'' deve ser 'verdadeiro' ou 'falso'.
javax.faces.converter.BooleanConverter.BOOLEAN_detail=''{0}'' deve ser 'verdadeiro' ou 'falso'. Qualquer outro valor diferente de 'verdadeiro' será entendido como 'falso'.
javax.faces.converter.ByteConverter.BYTE=''{0}'' deve ser um número entre 0 e 255.
javax.faces.converter.ByteConverter.BYTE_detail=''{0}'' deve ser um número entre 0 e 255.  Examplo\: {1} 
javax.faces.converter.CharacterConverter.CHARACTER=''{0}'' deve ser um caractere válido.
javax.faces.converter.CharacterConverter.CHARACTER_detail=''{0}'' deve ser um caractere ASCII válido.
javax.faces.converter.DateTimeConverter.DATE=''{0}'' não pode ser entendido como data.
javax.faces.converter.DateTimeConverter.DATE_detail=''{0}'' não pode ser entendido como data. Exemplo\: {1} 
javax.faces.converter.DateTimeConverter.TIME=''{0}'' não pode ser entendido como tempo.
javax.faces.converter.DateTimeConverter.TIME_detail=''{0}'' não pode ser entendido como tempo. Exemplo\: {1} 
javax.faces.converter.DateTimeConverter.DATETIME=''{0}'' não pode ser entendido como data ou tempo.
javax.faces.converter.DateTimeConverter.DATETIME_detail=''{0}'' não pode ser entendido como data ou tempo. Exemplo\: {1} 
javax.faces.converter.DateTimeConverter.PATTERN_TYPE=A 'pattern' or 'type' attribute must be specified to convert the value ''{0}''.
javax.faces.converter.DoubleConverter.DOUBLE=''{0}'' deve ser um número de um ou mais dígitos.
javax.faces.converter.DoubleConverter.DOUBLE_detail=''{0}'' deve ser um número entre 4.9E-324 e 1.7976931348623157E308  Exemplo\: {1} 
javax.faces.converter.EnumConverter.ENUM=''{0}'' não pode ser convertido em um enum.
javax.faces.converter.EnumConverter.ENUM_detail=''{0}'' deve ser um enum originado da seguinte constante ''{1}''.
javax.faces.converter.EnumConverter.ENUM_NO_CLASS=''{0}'' deve ser um enum mas não foi possível encontrar sua classe.
javax.faces.converter.EnumConverter.ENUM_NO_CLASS_detail=''{0}'' deve ser um enum mas não foi possível encontrar sua classe.
javax.faces.converter.FloatConverter.FLOAT=''{0}'' deve ser um número de um ou mais dígitos.
javax.faces.converter.FloatConverter.FLOAT_detail=''{0}'' deve ser um número entre 1.4E-45 e 3.4028235E38  Exemplo: {1}
javax.faces.converter.IntegerConverter.INTEGER=''{0}'' deve ser um número de um ou mais dígitos.
javax.faces.converter.IntegerConverter.INTEGER_detail=''{0}'' deve ser um número entre -2147483648 e 2147483647 Exemplo: {1}
javax.faces.converter.LongConverter.LONG=''{0}'' deve ser um número de um ou mais dígitos.
javax.faces.converter.LongConverter.LONG_detail=''{0}'' deve ser um número entre -9223372036854775808 e 9223372036854775807 Exemplo: {1}
javax.faces.converter.NumberConverter.CURRENCY=''{0}'' não pode ser entendido com moeda.
javax.faces.converter.NumberConverter.CURRENCY_detail=''{0}'' não pode ser entendido como moeda. Exemplo: {1}
javax.faces.converter.NumberConverter.PERCENT=''{0}'' não pode ser entendido como porcentagem.
javax.faces.converter.NumberConverter.PERCENT_detail=''{0}'' não pode ser enteendido como porcentagem. Exemplo: {1}
javax.faces.converter.NumberConverter.NUMBER=''{0}'' não é um número.
javax.faces.converter.NumberConverter.NUMBER_detail=''{0}'' não é um número. Exemplo: {1}
javax.faces.converter.NumberConverter.PATTERN=''{0}'' não é um padrão numérico.
javax.faces.converter.NumberConverter.PATTERN_detail=''{0}'' não é um padrão numérico. Exemplo: {1}
javax.faces.converter.ShortConverter.SHORT=''{0}'' deve ser um número de um ou mais dígitos.
javax.faces.converter.ShortConverter.SHORT_detail=''{0}'' deve ser um número entre -32768 e 32767 Exemplo: {1}
javax.faces.converter.STRING=Não foi possível converter ''{0}'' para uma string.


# ==============================================================================
# Validator Errors
# ==============================================================================

javax.faces.validator.NOT_IN_RANGE=O atributo não encontra-se entre {0} e {1}.
javax.faces.validator.DoubleRangeValidator.MAXIMUM=O valor é maior que "{0}"
javax.faces.validator.DoubleRangeValidator.MINIMUM=O valor é menor que ''{0}''
javax.faces.validator.DoubleRangeValidator.NOT_IN_RANGE=O valor não encontra-se entre {0} e {1}.
javax.faces.validator.DoubleRangeValidator.TYPE=Oo tipo do valor é incorreto
javax.faces.validator.LengthValidator.MAXIMUM=O valor é maior que ''{0}''
javax.faces.validator.LengthValidator.MINIMUM=O valor é menor que ''{0}''
javax.faces.validator.LongRangeValidator.MAXIMUM=O valor é maior que ''{0}''
javax.faces.validator.LongRangeValidator.MINIMUM=O valor é menor que ''{0}''
javax.faces.validator.LongRangeValidator.NOT_IN_RANGE=O valor não encontra-se entre {0} e {1}.
javax.faces.validator.LongRangeValidator.TYPE=Valor é de um tipo incorreto
org.hibernate.validator.constraints.Email.message=Email inválido
org.hibernate.validator.constraints.Length.message=Tamanho deve ser entre {min} e {max}
org.hibernate.validator.constraints.NotEmpty.message=Não pode ser vazio
org.hibernate.validator.constraints.Range.message=O valor deve estar entre {min} e {max}